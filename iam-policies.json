{
  "lambda_execution_role_policy": {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Principal": {
          "Service": "lambda.amazonaws.com"
        },
        "Action": "sts:AssumeRole"
      }
    ]
  },
  "lambda_execution_permissions": {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "BasicLambdaExecution",
        "Effect": "Allow",
        "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
        ],
        "Resource": "arn:aws:logs:*:*:*"
      },
      {
        "Sid": "VPCAccess",
        "Effect": "Allow",
        "Action": [
          "ec2:CreateNetworkInterface",
          "ec2:DescribeNetworkInterfaces",
          "ec2:DeleteNetworkInterface",
          "ec2:AttachNetworkInterface",
          "ec2:DetachNetworkInterface"
        ],
        "Resource": "*"
      },
      {
        "Sid": "XRayTracing",
        "Effect": "Allow",
        "Action": [
          "xray:PutTraceSegments",
          "xray:PutTelemetryRecords"
        ],
        "Resource": "*"
      },
      {
        "Sid": "ParameterStoreAccess",
        "Effect": "Allow",
        "Action": [
          "ssm:GetParameter",
          "ssm:GetParameters",
          "ssm:GetParametersByPath"
        ],
        "Resource": [
          "arn:aws:ssm:*:*:parameter/rapha-pdf-api/*"
        ]
      },
      {
        "Sid": "SecretsManagerAccess",
        "Effect": "Allow",
        "Action": [
          "secretsmanager:GetSecretValue"
        ],
        "Resource": [
          "arn:aws:secretsmanager:*:*:secret:rapha-pdf-api/*"
        ]
      }
    ]
  },
  "api_gateway_lambda_permission": {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "AllowAPIGatewayInvoke",
        "Effect": "Allow",
        "Principal": {
          "Service": "apigateway.amazonaws.com"
        },
        "Action": "lambda:InvokeFunction",
        "Resource": "arn:aws:lambda:*:*:function:rapha-pdf-api-*",
        "Condition": {
          "StringEquals": {
            "aws:SourceAccount": "${AWS::AccountId}"
          }
        }
      }
    ]
  },
  "cloudwatch_monitoring_policy": {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "CloudWatchMetrics",
        "Effect": "Allow",
        "Action": [
          "cloudwatch:PutMetricData",
          "cloudwatch:GetMetricStatistics",
          "cloudwatch:ListMetrics"
        ],
        "Resource": "*"
      },
      {
        "Sid": "CloudWatchLogs",
        "Effect": "Allow",
        "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents",
          "logs:DescribeLogGroups",
          "logs:DescribeLogStreams"
        ],
        "Resource": [
          "arn:aws:logs:*:*:log-group:/aws/lambda/rapha-pdf-api-*",
          "arn:aws:logs:*:*:log-group:/aws/lambda/rapha-pdf-api-*:*"
        ]
      }
    ]
  },
  "deployment_policy": {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "LambdaManagement",
        "Effect": "Allow",
        "Action": [
          "lambda:CreateFunction",
          "lambda:UpdateFunctionCode",
          "lambda:UpdateFunctionConfiguration",
          "lambda:GetFunction",
          "lambda:ListFunctions",
          "lambda:DeleteFunction",
          "lambda:PublishVersion",
          "lambda:CreateAlias",
          "lambda:UpdateAlias",
          "lambda:GetAlias",
          "lambda:ListAliases",
          "lambda:DeleteAlias",
          "lambda:AddPermission",
          "lambda:RemovePermission",
          "lambda:GetPolicy",
          "lambda:PutProvisionedConcurrencyConfig",
          "lambda:GetProvisionedConcurrencyConfig",
          "lambda:DeleteProvisionedConcurrencyConfig",
          "lambda:ListProvisionedConcurrencyConfigs",
          "lambda:TagResource",
          "lambda:UntagResource",
          "lambda:ListTags"
        ],
        "Resource": [
          "arn:aws:lambda:*:*:function:rapha-pdf-api-*",
          "arn:aws:lambda:*:*:layer:rapha-pdf-*"
        ]
      },
      {
        "Sid": "LambdaLayerManagement",
        "Effect": "Allow",
        "Action": [
          "lambda:PublishLayerVersion",
          "lambda:GetLayerVersion",
          "lambda:ListLayerVersions",
          "lambda:DeleteLayerVersion",
          "lambda:GetLayerVersionPolicy",
          "lambda:AddLayerVersionPermission",
          "lambda:RemoveLayerVersionPermission"
        ],
        "Resource": [
          "arn:aws:lambda:*:*:layer:rapha-pdf-*"
        ]
      },
      {
        "Sid": "IAMRoleManagement",
        "Effect": "Allow",
        "Action": [
          "iam:CreateRole",
          "iam:GetRole",
          "iam:UpdateRole",
          "iam:DeleteRole",
          "iam:AttachRolePolicy",
          "iam:DetachRolePolicy",
          "iam:PutRolePolicy",
          "iam:GetRolePolicy",
          "iam:DeleteRolePolicy",
          "iam:ListRolePolicies",
          "iam:ListAttachedRolePolicies",
          "iam:PassRole",
          "iam:TagRole",
          "iam:UntagRole"
        ],
        "Resource": [
          "arn:aws:iam::*:role/rapha-pdf-api-*"
        ]
      },
      {
        "Sid": "IAMPolicyManagement",
        "Effect": "Allow",
        "Action": [
          "iam:CreatePolicy",
          "iam:GetPolicy",
          "iam:GetPolicyVersion",
          "iam:ListPolicyVersions",
          "iam:CreatePolicyVersion",
          "iam:DeletePolicyVersion",
          "iam:SetDefaultPolicyVersion",
          "iam:DeletePolicy",
          "iam:TagPolicy",
          "iam:UntagPolicy"
        ],
        "Resource": [
          "arn:aws:iam::*:policy/rapha-pdf-api-*"
        ]
      },
      {
        "Sid": "APIGatewayManagement",
        "Effect": "Allow",
        "Action": [
          "apigateway:GET",
          "apigateway:POST",
          "apigateway:PUT",
          "apigateway:DELETE",
          "apigateway:PATCH"
        ],
        "Resource": [
          "arn:aws:apigateway:*::/restapis",
          "arn:aws:apigateway:*::/restapis/*"
        ]
      },
      {
        "Sid": "CloudFormationAccess",
        "Effect": "Allow",
        "Action": [
          "cloudformation:CreateStack",
          "cloudformation:UpdateStack",
          "cloudformation:DeleteStack",
          "cloudformation:DescribeStacks",
          "cloudformation:DescribeStackEvents",
          "cloudformation:DescribeStackResources",
          "cloudformation:GetTemplate"
        ],
        "Resource": [
          "arn:aws:cloudformation:*:*:stack/rapha-pdf-api-*"
        ]
      },
      {
        "Sid": "S3Access",
        "Effect": "Allow",
        "Action": [
          "s3:GetObject",
          "s3:PutObject",
          "s3:DeleteObject",
          "s3:ListBucket"
        ],
        "Resource": [
          "arn:aws:s3:::rapha-pdf-api-deployments",
          "arn:aws:s3:::rapha-pdf-api-deployments/*"
        ]
      }
    ]
  },
  "security_policy": {
    "Version": "2012-10-17",
    "Statement": [
      {
        "Sid": "DenyInsecureConnections",
        "Effect": "Deny",
        "Action": "*",
        "Resource": "*",
        "Condition": {
          "Bool": {
            "aws:SecureTransport": "false"
          }
        }
      },
      {
        "Sid": "RestrictToSpecificRegions",
        "Effect": "Deny",
        "Action": "*",
        "Resource": "*",
        "Condition": {
          "StringNotEquals": {
            "aws:RequestedRegion": [
              "ap-south-1",
              "us-west-2",
              "eu-west-1"
            ]
          }
        }
      },
      {
        "Sid": "RequireMFAForSensitiveActions",
        "Effect": "Deny",
        "Action": [
          "lambda:DeleteFunction",
          "iam:DeleteRole",
          "iam:DeletePolicy"
        ],
        "Resource": "*",
        "Condition": {
          "BoolIfExists": {
            "aws:MultiFactorAuthPresent": "false"
          }
        }
      }
    ]
  }
}